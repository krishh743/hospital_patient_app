[{"C:\\Users\\krish\\Desktop\\hospital patient list\\patient-list-app\\src\\index.js":"1","C:\\Users\\krish\\Desktop\\hospital patient list\\patient-list-app\\src\\App.js":"2","C:\\Users\\krish\\Desktop\\hospital patient list\\patient-list-app\\src\\reportWebVitals.js":"3","C:\\Users\\krish\\Desktop\\hospital patient list\\patient-list-app\\src\\components\\PatientList.js":"4","C:\\Users\\krish\\Desktop\\hospital patient list\\patient-list-app\\src\\components\\PatientModal.js":"5","C:\\Users\\krish\\Desktop\\hospital patient list\\patient-list-app\\src\\components\\Header.js":"6","C:\\Users\\krish\\Desktop\\hospital patient list\\patient-list-app\\src\\components\\Data.js":"7","C:\\Users\\krish\\Desktop\\hospital patient list\\patient-list-app\\src\\components\\DialogBox.js":"8"},{"size":624,"mtime":1681906302232,"results":"9","hashOfConfig":"10"},{"size":373,"mtime":1682012046560,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1681889674730,"results":"12","hashOfConfig":"10"},{"size":10973,"mtime":1682021307215,"results":"13","hashOfConfig":"10"},{"size":1385,"mtime":1681890032129,"results":"14","hashOfConfig":"10"},{"size":1315,"mtime":1682012018507,"results":"15","hashOfConfig":"10"},{"size":3628,"mtime":1682002574326,"results":"16","hashOfConfig":"10"},{"size":1546,"mtime":1681973378023,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"16oav58",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\krish\\Desktop\\hospital patient list\\patient-list-app\\src\\index.js",[],[],[],"C:\\Users\\krish\\Desktop\\hospital patient list\\patient-list-app\\src\\App.js",[],[],"C:\\Users\\krish\\Desktop\\hospital patient list\\patient-list-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\krish\\Desktop\\hospital patient list\\patient-list-app\\src\\components\\PatientList.js",["45"],[],"import React, {useState, useEffect} from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport {Button, Stack} from \"@mui/material\";\r\nimport {patientData} from \"./Data\";\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport \"./Patient.css\"\r\n// import {patientData} from \"./Header\";\r\n\r\nconst PatientList = () => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [filteredData, setFilteredData] = useState(patientData);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [editingPatient, setEditingPatient] = useState(null);\r\n    const [newPatientData, setNewPatientData] = useState({\r\n        name: \"\",\r\n        gender: \"\",\r\n        dob: \"\",\r\n        image: \"\"\r\n    });\r\n    const [showNewPatientModal, setShowNewPatientModal] = useState(false);\r\n\r\n    const [open, setOpen] = useState(false)\r\n    useEffect(() => {\r\n        const results = patientData.filter(patient =>\r\n            patient.name.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n        setFilteredData(results);\r\n    }, [search]);\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleImageChange = (event) => {\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n            setNewPatientData(prevState => ({\r\n                ...prevState,\r\n                image: reader.result\r\n            }));\r\n        };\r\n    };\r\n\r\n    const handleSearch = event => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const handleEdit = patient => {\r\n        setEditingPatient(patient);\r\n        setNewPatientData(patient);\r\n        setShowModal(true);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (editingPatient) {\r\n            // Edit existing patient\r\n            const updatedData = patientData.map(patient =>\r\n                patient.id === editingPatient.id ? newPatientData : patient\r\n            );\r\n            setFilteredData(updatedData);\r\n            localStorage.setItem(\"patientData\", JSON.stringify(updatedData));\r\n        } else {\r\n            // Add new patient\r\n            const newPatient = {\r\n                id: patientData.length + 1,\r\n                ...newPatientData\r\n            };\r\n            const updatedData = [...patientData, newPatient];\r\n            setFilteredData(updatedData);\r\n            localStorage.setItem(\"patientData\", JSON.stringify(updatedData));\r\n        }\r\n        setShowModal(false);\r\n        setEditingPatient(null);\r\n        setNewPatientData({\r\n            name: \"\",\r\n            gender: \"\",\r\n            dob: \"\",\r\n            image: \"\"\r\n        });\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setShowModal(false);\r\n        setEditingPatient(null);\r\n        setNewPatientData({\r\n            name: \"\",\r\n            gender: \"\",\r\n            dob: \"\",\r\n            image: \"\"\r\n        });\r\n    };\r\n\r\n    const handleInputChange = event => {\r\n        const {name, value} = event.target;\r\n        setNewPatientData(prevData => ({\r\n            ...prevData,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleAddPatient = () => {\r\n        const newPatient = {\r\n            id: patientData.length + 1,\r\n            ...newPatientData\r\n        };\r\n        const updatedData = [...patientData, newPatient];\r\n        setFilteredData(updatedData);\r\n        localStorage.setItem(\"patientData\", JSON.stringify(updatedData));\r\n        setShowNewPatientModal(false);\r\n        setNewPatientData({\r\n            name: \"\",\r\n            gender: \"\",\r\n            dob: \"\",\r\n            image: \"\"\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"patient-list-body\">\r\n            <Stack direction={\"\"} justifyContent=\"center\" >\r\n                <p className=\"find-patient-text\">Find your patient here</p>\r\n            </Stack>\r\n\r\n            <div className=\"input-field\" >\r\n                <Button\r\n                    variant=\"contained\"\r\n                    onClick={() => setShowNewPatientModal(true)}\r\n                >\r\n                    Add New Patient\r\n                </Button>\r\n                <input\r\n                    className=\"input-txt\"\r\n                    placeholder=\"Search patient name..\"\r\n                    type=\"text\"\r\n                    value={search}\r\n                    onChange={handleSearch}\r\n                />\r\n            </div>\r\n\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    '& > :not(style)': {\r\n                        m: 5,\r\n                        width: 330,\r\n                    },\r\n                }}\r\n            >\r\n                {filteredData.map((patient) => (\r\n\r\n                    <Paper  >\r\n                        <div className=\"patient-list\" >\r\n                            <img className=\"patient-photo\" src={patient.image} alt=\"green iguana\" />\r\n                        </div>\r\n                        <Typography color=\"green\" gutterTop variant=\"h5\" marginLeft={\"20px\"}>\r\n                            {patient.name}\r\n                        </Typography>\r\n                        <Stack direction={\"column\"} marginLeft={\"20px\"} spacing={1}>\r\n                            <span className=\"reason\"><span >Reason for admit : </span>{patient.subject}</span>\r\n                            <span>{patient.gender}</span>\r\n                            <span className=\"dob-alignment\">{patient.dob}</span>\r\n                        </Stack>\r\n                        <div className=\"edit-btn-section\"  >\r\n\r\n                            <Button className=\"edit-btn\" variant=\"contained\" onClick={() => {handleEdit(patient); setOpen(true);}\r\n                            }>\r\n                                Edit\r\n                            </Button>\r\n                        </div>\r\n                    </Paper>\r\n                ))}\r\n            </Box>\r\n\r\n            {showModal && (\r\n                <div>\r\n                    <Dialog open={open} onClose={handleClose} >\r\n                        <DialogTitle>\r\n                            {editingPatient ? \"Edit Patient\" : \"Add New Patient\"}\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Edit your patient details here\r\n                            </DialogContentText>\r\n                            <input\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                                onChange={handleImageChange}\r\n                                style={{marginBottom: \"20px\"}}\r\n                            />\r\n\r\n                            <img\r\n                                src={newPatientData.image}\r\n                                alt=\"patient image\"\r\n                                className=\"new-patient-image\"\r\n\r\n                            />\r\n\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"name\"\r\n                                placeholder=\"Name\"\r\n                                fullWidth\r\n                                value={newPatientData.name}\r\n                                onChange={handleInputChange}\r\n                                name=\"name\"\r\n\r\n                            />\r\n\r\n                            <TextField\r\n                                margin=\"dense\"\r\n                                id=\"gender\"\r\n                                placeholder=\"Gender\"\r\n                                fullWidth\r\n                                value={newPatientData.gender}\r\n                                onChange={handleInputChange}\r\n                                name=\"gender\"\r\n                            />\r\n\r\n                            <TextField\r\n                                margin=\"dense\"\r\n                                id=\"dob\"\r\n                                placeholder=\"Date of Birth\"\r\n                                fullWidth\r\n                                value={newPatientData.dob}\r\n                                onChange={handleInputChange}\r\n                                name=\"dob\"\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions className=\"center-btn\">\r\n                            <Button className=\"edit-btn-1\" onClick={handleCancel}>Cancel</Button>\r\n                            <Button className=\"edit-btn-1\" onClick={handleSave}>Save</Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n            )}\r\n            {showNewPatientModal && <div>\r\n                <Dialog open={showNewPatientModal} onClose={() => setShowNewPatientModal(false)} className=\"add-data-dialog\">\r\n                    <DialogTitle>Add New Patient</DialogTitle>\r\n                    <DialogContent>\r\n                        <form>\r\n                            <TextField\r\n                                placeholder=\"Name\"\r\n                                value={newPatientData.name}\r\n                                onChange={handleInputChange}\r\n                                name=\"name\"\r\n                            />\r\n                            <TextField\r\n                                placeholder=\"Gender\"\r\n                                value={newPatientData.gender}\r\n                                onChange={handleInputChange}\r\n                                name=\"gender\"\r\n                                className=\"textfield-data\"\r\n                            />\r\n                            <TextField\r\n                                placeholder=\"DOB\"\r\n                                value={newPatientData.dob}\r\n                                onChange={handleInputChange}\r\n                                name=\"dob\"\r\n                            />\r\n                            <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} className=\"upload-image\" />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions className=\"center-btn\">\r\n                        <Button onClick={() => setShowNewPatientModal(false)}\r\n                            className=\"edit-btn-1\"\r\n                        >Cancel</Button>\r\n                        <Button onClick={handleAddPatient} className=\"edit-btn-1\">Save</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default PatientList;\r\n\r\n\r\n\r\n","C:\\Users\\krish\\Desktop\\hospital patient list\\patient-list-app\\src\\components\\PatientModal.js",[],[],"C:\\Users\\krish\\Desktop\\hospital patient list\\patient-list-app\\src\\components\\Header.js",["46"],[],"import {Button, Stack} from '@mui/material';\r\nimport React from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    const navigate = useNavigate();\r\n\r\n    const handleClick = () => {\r\n        navigate('/patients');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <header className=\"header\">\r\n                <div className=\"brand-box\">\r\n                    <span className=\"brand\">Shree Krishna Hospital</span>\r\n                </div>\r\n\r\n                <div className=\"text-box\">\r\n                    <h1 className=\"heading-primary\">\r\n                        <span className=\"heading-primary-main\">All Entries and List of Patient</span>\r\n                    </h1>\r\n                    <div className=\"text-box1\" >\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        // onClick={handleClick}\r\n                    >\r\n                        Admin Login\r\n                    </Button>\r\n                    <Button\r\n                      \r\n                        variant=\"outlined\"\r\n                        onClick={handleClick}\r\n                    >\r\n                        See Patients List\r\n                    </Button>\r\n</div>\r\n                </div>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\krish\\Desktop\\hospital patient list\\patient-list-app\\src\\components\\Data.js",[],[],"C:\\Users\\krish\\Desktop\\hospital patient list\\patient-list-app\\src\\components\\DialogBox.js",[],[],{"ruleId":"47","severity":1,"message":"48","line":203,"column":29,"nodeType":"49","endLine":208,"endColumn":31},{"ruleId":"50","severity":1,"message":"51","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":22},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'Stack' is defined but never used.","Identifier","unusedVar"]
{"ast":null,"code":"// import {Button} from \"@mui/material\";\n// import React, {useState, useEffect} from \"react\";\n// import {patientData} from \"./Data\";\n\n// const PatientList = () => {\n//     const [search, setSearch] = useState(\"\");\n//     const [filteredData, setFilteredData] = useState(patientData);\n//     const [showModal, setShowModal] = useState(false);\n//     const [editingPatient, setEditingPatient] = useState(null);\n//     const [newPatientData, setNewPatientData] = useState({\n//         name: \"\",\n//         gender: \"\",\n//         dob: \"\",\n//         image: \"\"\n//     });\n\n//     useEffect(() => {\n//         const results = patientData.filter(patient =>\n//             patient.name.toLowerCase().includes(search.toLowerCase())\n//         );\n//         setFilteredData(results);\n//     }, [search]);\n\n//     const handleSearch = event => {\n//         setSearch(event.target.value);\n//     };\n\n//     const handleEdit = patient => {\n//         setEditingPatient(patient);\n//         setNewPatientData(patient);\n//         setShowModal(true);\n//     };\n\n//     const handleSave = () => {\n//         if (editingPatient) {\n//             // Edit existing patient\n//             const updatedData = patientData.map(patient =>\n//                 patient.id === editingPatient.id ? newPatientData : patient\n//             );\n//             setFilteredData(updatedData);\n//             localStorage.setItem(\"patientData\", JSON.stringify(updatedData));\n//         } else {\n//             // Add new patient\n//             const newPatient = {\n//                 id: patientData.length + 1,\n//                 ...newPatientData\n//             };\n//             const updatedData = [...patientData, newPatient];\n//             setFilteredData(updatedData);\n//             localStorage.setItem(\"patientData\", JSON.stringify(updatedData));\n//         }\n//         setShowModal(false);\n//         setEditingPatient(null);\n//         setNewPatientData({\n//             name: \"\",\n//             gender: \"\",\n//             dob: \"\",\n//             image: \"\"\n//         });\n//     };\n\n//     const handleCancel = () => {\n//         setShowModal(false);\n//         setEditingPatient(null);\n//         setNewPatientData({\n//             name: \"\",\n//             gender: \"\",\n//             dob: \"\",\n//             image: \"\"\n//         });\n//     };\n\n//     const handleInputChange = event => {\n//         const {name, value} = event.target;\n//         setNewPatientData(prevData => ({\n//             ...prevData,\n//             [name]: value\n//         }));\n//     };\n\n//     return (\n//         <div>\n//             <input type=\"text\" value={search} onChange={handleSearch} />\n//             <ul>\n//                 {filteredData.map(patient => (\n//                     <li key={patient.id}>\n//                         <img src={patient.image} alt={patient.name} />\n//                         <p>{patient.name}</p>\n//                         <p>{patient.dob}</p>\n//                         <p>{patient.gender}</p>\n//                         <button onClick={() => handleEdit(patient)}>Edit</button>\n//                     </li>\n//                 ))}\n//             </ul>\n//             {showModal && (\n//                 <div className=\"modal\">\n//                     <div className=\"modal-content\">\n//                         <h2>{editingPatient ? \"Edit Patient\" : \"Add New Patient\"}</h2>\n//                         <form>\n//                             <label htmlFor=\"name\">Name:</label>\n//                             <input type=\"text\" id=\"name\" name=\"name\" value={newPatientData.name} onChange={handleInputChange} />\n//                             <label htmlFor=\"gender\">Gender:</label>\n//                             <input type=\"text\" id=\"gender\" name=\"gender\" value={newPatientData.gender} onChange={handleInputChange} />\n//                             <label htmlFor=\"dob\">Date of Birth:</label>\n//                             <input type=\"text\" id=\"dob\" name=\"dob\" value={newPatientData.dob} onChange={handleInputChange} />\n//                             <label htmlFor=\"image\">Image URL:</label>\n//                             <input type=\"text\" id=\"image\" name=\"image\" value={newPatientData.image} onChange={handleInputChange} />\n//                         </form>\n//                         <Button onClick={handleSave}>Save</Button>\n//                         <Button onClick={handleCancel}>cancel</Button>\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default PatientList;","map":{"version":3,"names":[],"sources":["C:/Users/krish/Desktop/hospital patient list/patient-list-app/src/components/PatientList.js"],"sourcesContent":["// import {Button} from \"@mui/material\";\r\n// import React, {useState, useEffect} from \"react\";\r\n// import {patientData} from \"./Data\";\r\n\r\n// const PatientList = () => {\r\n//     const [search, setSearch] = useState(\"\");\r\n//     const [filteredData, setFilteredData] = useState(patientData);\r\n//     const [showModal, setShowModal] = useState(false);\r\n//     const [editingPatient, setEditingPatient] = useState(null);\r\n//     const [newPatientData, setNewPatientData] = useState({\r\n//         name: \"\",\r\n//         gender: \"\",\r\n//         dob: \"\",\r\n//         image: \"\"\r\n//     });\r\n\r\n//     useEffect(() => {\r\n//         const results = patientData.filter(patient =>\r\n//             patient.name.toLowerCase().includes(search.toLowerCase())\r\n//         );\r\n//         setFilteredData(results);\r\n//     }, [search]);\r\n\r\n//     const handleSearch = event => {\r\n//         setSearch(event.target.value);\r\n//     };\r\n\r\n//     const handleEdit = patient => {\r\n//         setEditingPatient(patient);\r\n//         setNewPatientData(patient);\r\n//         setShowModal(true);\r\n//     };\r\n\r\n//     const handleSave = () => {\r\n//         if (editingPatient) {\r\n//             // Edit existing patient\r\n//             const updatedData = patientData.map(patient =>\r\n//                 patient.id === editingPatient.id ? newPatientData : patient\r\n//             );\r\n//             setFilteredData(updatedData);\r\n//             localStorage.setItem(\"patientData\", JSON.stringify(updatedData));\r\n//         } else {\r\n//             // Add new patient\r\n//             const newPatient = {\r\n//                 id: patientData.length + 1,\r\n//                 ...newPatientData\r\n//             };\r\n//             const updatedData = [...patientData, newPatient];\r\n//             setFilteredData(updatedData);\r\n//             localStorage.setItem(\"patientData\", JSON.stringify(updatedData));\r\n//         }\r\n//         setShowModal(false);\r\n//         setEditingPatient(null);\r\n//         setNewPatientData({\r\n//             name: \"\",\r\n//             gender: \"\",\r\n//             dob: \"\",\r\n//             image: \"\"\r\n//         });\r\n//     };\r\n\r\n//     const handleCancel = () => {\r\n//         setShowModal(false);\r\n//         setEditingPatient(null);\r\n//         setNewPatientData({\r\n//             name: \"\",\r\n//             gender: \"\",\r\n//             dob: \"\",\r\n//             image: \"\"\r\n//         });\r\n//     };\r\n\r\n//     const handleInputChange = event => {\r\n//         const {name, value} = event.target;\r\n//         setNewPatientData(prevData => ({\r\n//             ...prevData,\r\n//             [name]: value\r\n//         }));\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <input type=\"text\" value={search} onChange={handleSearch} />\r\n//             <ul>\r\n//                 {filteredData.map(patient => (\r\n//                     <li key={patient.id}>\r\n//                         <img src={patient.image} alt={patient.name} />\r\n//                         <p>{patient.name}</p>\r\n//                         <p>{patient.dob}</p>\r\n//                         <p>{patient.gender}</p>\r\n//                         <button onClick={() => handleEdit(patient)}>Edit</button>\r\n//                     </li>\r\n//                 ))}\r\n//             </ul>\r\n//             {showModal && (\r\n//                 <div className=\"modal\">\r\n//                     <div className=\"modal-content\">\r\n//                         <h2>{editingPatient ? \"Edit Patient\" : \"Add New Patient\"}</h2>\r\n//                         <form>\r\n//                             <label htmlFor=\"name\">Name:</label>\r\n//                             <input type=\"text\" id=\"name\" name=\"name\" value={newPatientData.name} onChange={handleInputChange} />\r\n//                             <label htmlFor=\"gender\">Gender:</label>\r\n//                             <input type=\"text\" id=\"gender\" name=\"gender\" value={newPatientData.gender} onChange={handleInputChange} />\r\n//                             <label htmlFor=\"dob\">Date of Birth:</label>\r\n//                             <input type=\"text\" id=\"dob\" name=\"dob\" value={newPatientData.dob} onChange={handleInputChange} />\r\n//                             <label htmlFor=\"image\">Image URL:</label>\r\n//                             <input type=\"text\" id=\"image\" name=\"image\" value={newPatientData.image} onChange={handleInputChange} />\r\n//                         </form>\r\n//                         <Button onClick={handleSave}>Save</Button>\r\n//                         <Button onClick={handleCancel}>cancel</Button>\r\n//                     </div>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default PatientList;\r\n\r\n\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}
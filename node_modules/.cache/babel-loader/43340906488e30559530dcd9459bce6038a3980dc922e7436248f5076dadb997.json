{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krish\\\\Desktop\\\\hospital patient list\\\\patient-list-app\\\\src\\\\components\\\\PatientList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PatientModal from './PatientModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientList = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [filteredPatients, setFilteredPatients] = useState([]);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    // Load patients from local storage or an API\n    const savedPatients = JSON.parse(localStorage.getItem('patients')) || [];\n    setPatients(savedPatients);\n    setFilteredPatients(savedPatients);\n  }, []);\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n    const filtered = patients.filter(patient => patient.name.toLowerCase().includes(event.target.value.toLowerCase()));\n    setFilteredPatients(filtered);\n  };\n  const handleEdit = patient => {\n    setSelectedPatient(patient);\n  };\n  const handleSave = updatedPatient => {\n    const index = patients.findIndex(patient => patient.id === updatedPatient.id);\n    const updatedPatients = [...patients];\n    updatedPatients[index] = updatedPatient;\n    setPatients(updatedPatients);\n    setFilteredPatients(updatedPatients);\n    localStorage.setItem('patients', JSON.stringify(updatedPatients));\n    setSelectedPatient(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredPatients.map(patient => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: patient.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(patient),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, patient.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), selectedPatient && /*#__PURE__*/_jsxDEV(PatientModal, {\n      patient: selectedPatient,\n      onSave: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(PatientList, \"Sab/NqdxMoEVZUUEmym7tPW+Jxk=\");\n_c = PatientList;\nexport default PatientList;\nvar _c;\n$RefreshReg$(_c, \"PatientList\");","map":{"version":3,"names":["React","useState","useEffect","PatientModal","jsxDEV","_jsxDEV","PatientList","_s","patients","setPatients","filteredPatients","setFilteredPatients","selectedPatient","setSelectedPatient","searchTerm","setSearchTerm","savedPatients","JSON","parse","localStorage","getItem","handleSearch","event","target","value","filtered","filter","patient","name","toLowerCase","includes","handleEdit","handleSave","updatedPatient","index","findIndex","id","updatedPatients","setItem","stringify","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","onSave","_c","$RefreshReg$"],"sources":["C:/Users/krish/Desktop/hospital patient list/patient-list-app/src/components/PatientList.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport PatientModal from './PatientModal';\r\n\r\nconst PatientList = () => {\r\n    const [patients, setPatients] = useState([]);\r\n    const [filteredPatients, setFilteredPatients] = useState([]);\r\n    const [selectedPatient, setSelectedPatient] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Load patients from local storage or an API\r\n        const savedPatients = JSON.parse(localStorage.getItem('patients')) || [];\r\n        setPatients(savedPatients);\r\n        setFilteredPatients(savedPatients);\r\n    }, []);\r\n\r\n    const handleSearch = (event) => {\r\n        setSearchTerm(event.target.value);\r\n        const filtered = patients.filter(\r\n            (patient) =>\r\n                patient.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n        );\r\n        setFilteredPatients(filtered);\r\n    };\r\n\r\n    const handleEdit = (patient) => {\r\n        setSelectedPatient(patient);\r\n    };\r\n\r\n    const handleSave = (updatedPatient) => {\r\n        const index = patients.findIndex(\r\n            (patient) => patient.id === updatedPatient.id\r\n        );\r\n        const updatedPatients = [...patients];\r\n        updatedPatients[index] = updatedPatient;\r\n        setPatients(updatedPatients);\r\n        setFilteredPatients(updatedPatients);\r\n        localStorage.setItem('patients', JSON.stringify(updatedPatients));\r\n        setSelectedPatient(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" value={searchTerm} onChange={handleSearch} />\r\n            <ul>\r\n                {filteredPatients.map((patient) => (\r\n                    <li key={patient.id}>\r\n                        <span>{patient.name}</span>\r\n                        <button onClick={() => handleEdit(patient)}>Edit</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            {selectedPatient && (\r\n                <PatientModal patient={selectedPatient} onSave={handleSave} />\r\n            )}\r\n        </div>  \r\n    );\r\n};\r\n\r\nexport default PatientList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
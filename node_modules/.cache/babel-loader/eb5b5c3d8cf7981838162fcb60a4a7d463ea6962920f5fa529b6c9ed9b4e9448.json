{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krish\\\\Desktop\\\\hospital patient list\\\\patient-list-app\\\\src\\\\components\\\\PatientList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst patientData = [{\n  id: 1,\n  name: \"John Doe\",\n  gender: \"Male\",\n  dob: \"01/01/1980\",\n  image: \"https://randomuser.me/api/portraits/men/1.jpg\"\n}, {\n  id: 2,\n  name: \"Jane Doe\",\n  gender: \"Female\",\n  dob: \"02/02/1985\",\n  image: \"https://randomuser.me/api/portraits/women/2.jpg\"\n}, {\n  id: 3,\n  name: \"Bob Smith\",\n  gender: \"Male\",\n  dob: \"03/03/1990\",\n  image: \"https://randomuser.me/api/portraits/men/3.jpg\"\n}];\nconst handleSave = updatedPatient => {\n  const index = patients.findIndex(patient => patient.id === updatedPatient.id);\n  const updatedPatients = [...patients];\n  updatedPatients[index] = updatedPatient;\n  setPatients(updatedPatients);\n  setFilteredPatients(updatedPatients);\n  localStorage.setItem('patients', JSON.stringify(updatedPatients));\n  setSelectedPatient(null);\n};\nconst PatientList = () => {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [filteredData, setFilteredData] = useState(patientData);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  useEffect(() => {\n    const results = patientData.filter(patient => patient.name.toLowerCase().includes(search.toLowerCase()));\n    setFilteredData(results);\n  }, [search]);\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n  const handleEdit = (name, gender, dob, image) => {\n    // Store the patient data in local storage\n    localStorage.setItem(\"patient\", JSON.stringify({\n      name,\n      gender,\n      dob,\n      image\n    }));\n\n    // Open the edit modal\n    // code for opening the modal goes here\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: search,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredData.map(patient => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: patient.image,\n          alt: patient.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: patient.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(patient.name, patient.gender, patient.dob, patient.image),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)]\n      }, patient.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), selectedPatient && /*#__PURE__*/_jsxDEV(PatientModal, {\n      patient: selectedPatient,\n      onSave: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(PatientList, \"pWwkPil/HYO4ZZ4p44IEpc9EQag=\");\n_c = PatientList;\nexport default PatientList;\nvar _c;\n$RefreshReg$(_c, \"PatientList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","patientData","id","name","gender","dob","image","handleSave","updatedPatient","index","patients","findIndex","patient","updatedPatients","setPatients","setFilteredPatients","localStorage","setItem","JSON","stringify","setSelectedPatient","PatientList","_s","search","setSearch","filteredData","setFilteredData","selectedPatient","results","filter","toLowerCase","includes","handleSearch","event","target","value","handleEdit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","src","alt","onClick","PatientModal","onSave","_c","$RefreshReg$"],"sources":["C:/Users/krish/Desktop/hospital patient list/patient-list-app/src/components/PatientList.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\n\r\nconst patientData = [\r\n    {\r\n        id: 1,\r\n        name: \"John Doe\",\r\n        gender: \"Male\",\r\n        dob: \"01/01/1980\",\r\n        image: \"https://randomuser.me/api/portraits/men/1.jpg\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Jane Doe\",\r\n        gender: \"Female\",\r\n        dob: \"02/02/1985\",\r\n        image: \"https://randomuser.me/api/portraits/women/2.jpg\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Bob Smith\",\r\n        gender: \"Male\",\r\n        dob: \"03/03/1990\",\r\n        image: \"https://randomuser.me/api/portraits/men/3.jpg\"\r\n    }\r\n];\r\n\r\nconst handleSave = (updatedPatient) => {\r\n    const index = patients.findIndex(\r\n        (patient) => patient.id === updatedPatient.id\r\n    );\r\n    const updatedPatients = [...patients];\r\n    updatedPatients[index] = updatedPatient;\r\n    setPatients(updatedPatients);\r\n    setFilteredPatients(updatedPatients);\r\n    localStorage.setItem('patients', JSON.stringify(updatedPatients));\r\n    setSelectedPatient(null);\r\n};\r\n\r\nconst PatientList = () => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [filteredData, setFilteredData] = useState(patientData);\r\n    const [selectedPatient, setSelectedPatient] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const results = patientData.filter(patient =>\r\n            patient.name.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n        setFilteredData(results);\r\n    }, [search]);\r\n\r\n    const handleSearch = event => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const handleEdit = (name, gender, dob, image) => {\r\n        // Store the patient data in local storage\r\n        localStorage.setItem(\"patient\", JSON.stringify({name, gender, dob, image}));\r\n\r\n        // Open the edit modal\r\n        // code for opening the modal goes here\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" value={search} onChange={handleSearch} />\r\n            <ul>\r\n                {filteredData.map(patient => (\r\n                    <li key={patient.id}>\r\n                        <img src={patient.image} alt={patient.name} />\r\n                        <p>{patient.name}</p>\r\n                        <button onClick={() => handleEdit(patient.name, patient.gender, patient.dob, patient.image)}>Edit</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            {selectedPatient && (\r\n                <PatientModal patient={selectedPatient} onSave={handleSave} />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
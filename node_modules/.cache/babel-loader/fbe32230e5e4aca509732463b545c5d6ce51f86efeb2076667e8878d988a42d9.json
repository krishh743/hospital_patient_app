{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krish\\\\Desktop\\\\hospital patient list\\\\patient-list-app\\\\src\\\\components\\\\PatientList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst patientData = [{\n  id: 1,\n  name: \"John Doe\",\n  gender: \"Male\",\n  dob: \"01/01/1980\",\n  image: \"https://randomuser.me/api/portraits/men/1.jpg\"\n}, {\n  id: 2,\n  name: \"Jane Doe\",\n  gender: \"Female\",\n  dob: \"02/02/1985\",\n  image: \"https://randomuser.me/api/portraits/women/2.jpg\"\n}, {\n  id: 3,\n  name: \"Bob Smith\",\n  gender: \"Male\",\n  dob: \"03/03/1990\",\n  image: \"https://randomuser.me/api/portraits/men/3.jpg\"\n}];\nconst PatientList = () => {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [filteredData, setFilteredData] = useState(patientData);\n  useEffect(() => {\n    const results = patientData.filter(patient => patient.name.toLowerCase().includes(search.toLowerCase()));\n    setFilteredData(results);\n  }, [search]);\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n  const handleEdit = (name, gender, dob, image) => {\n    // Store the patient data in local storage\n    localStorage.setItem(\"patient\", JSON.stringify({\n      name,\n      gender,\n      dob,\n      image\n    }));\n\n    // Open the edit modal\n    // code for opening the modal goes here\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: search,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredData.map(patient => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: patient.image,\n          alt: patient.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: patient.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(patient.name, patient.gender, patient.dob, patient.image),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, patient.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(PatientList, \"b0V/D0PwUgHqz0TVJTfNMWZokwM=\");\n_c = PatientList;\nexport default PatientList;\nvar _c;\n$RefreshReg$(_c, \"PatientList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","patientData","id","name","gender","dob","image","PatientList","_s","search","setSearch","filteredData","setFilteredData","results","filter","patient","toLowerCase","includes","handleSearch","event","target","value","handleEdit","localStorage","setItem","JSON","stringify","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/krish/Desktop/hospital patient list/patient-list-app/src/components/PatientList.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\n\r\nconst patientData = [\r\n    {\r\n        id: 1,\r\n        name: \"John Doe\",\r\n        gender: \"Male\",\r\n        dob: \"01/01/1980\",\r\n        image: \"https://randomuser.me/api/portraits/men/1.jpg\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Jane Doe\",\r\n        gender: \"Female\",\r\n        dob: \"02/02/1985\",\r\n        image: \"https://randomuser.me/api/portraits/women/2.jpg\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Bob Smith\",\r\n        gender: \"Male\",\r\n        dob: \"03/03/1990\",\r\n        image: \"https://randomuser.me/api/portraits/men/3.jpg\"\r\n    }\r\n];\r\n\r\n\r\nconst PatientList = () => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [filteredData, setFilteredData] = useState(patientData);\r\n\r\n    useEffect(() => {\r\n        const results = patientData.filter(patient =>\r\n            patient.name.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n        setFilteredData(results);\r\n    }, [search]);\r\n\r\n    const handleSearch = event => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const handleEdit = (name, gender, dob, image) => {\r\n        // Store the patient data in local storage\r\n        localStorage.setItem(\"patient\", JSON.stringify({name, gender, dob, image}));\r\n\r\n        // Open the edit modal\r\n        // code for opening the modal goes here\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" value={search} onChange={handleSearch} />\r\n            <ul>\r\n                {filteredData.map(patient => (\r\n                    <li key={patient.id}>\r\n                        <img src={patient.image} alt={patient.name} />\r\n                        <p>{patient.name}</p>\r\n                        <button onClick={() => handleEdit(patient.name, patient.gender, patient.dob, patient.image)}>Edit</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}